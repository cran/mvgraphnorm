\documentclass[11pt]{article}
\usepackage{makeidx}  % allows for indexgeneration
\usepackage{graphicx}
\usepackage{dsfont}
\usepackage{amsmath}
\usepackage{algorithm}
\usepackage{algorithmic}
%\usepackage{bbb}
%################
<<style-Sweave, eval=TRUE, echo=FALSE, results=tex>>=
library(tools)
#BiocStyle::latex()
@

\usepackage{epsfig}
\usepackage{color}
\usepackage{psfrag}

\usepackage[english]{babel}
\usepackage{rotating}
\usepackage{rotate}
\usepackage{lscape}
%\usepackage{stmaryrd}
\usepackage{eufrak}
\usepackage{bbm}
\usepackage{marvosym}
\usepackage{txfonts}
\usepackage{pgf}
\usepackage{tikz}
\usepackage[latin1]{inputenc}
\definecolor{verboxcolor}{RGB}{235,235,235}
\usepackage{tikz}
\usepackage{verbatim}






\begin{document}
\SweaveOpts{concordance=TRUE}

%%%%%%%%%%%%%%%%%
%\SweaveOpts{engine=R,eps=FALSE}
%\VignetteIndexEntry{mvgraphnorm: An R package which generates  constrained covariance matrix for a given graph to generate samples from a Gaussian graphical model}
%\VignetteDepends{mvgraphnorm}
%\VignetteKeywords{network, , R}
%\VignettePackage{mvgraphnorm}


<<preliminaries,echo=FALSE,results=hide>>=
library(mvgraphnorm)
options(SweaveHooks=list(twofig=function() {par(mfrow=c(1,2))},
                         twofig2=function() {par(mfrow=c(2,1))},
                         onefig=function() {par(mfrow=c(1,1))}))
@



%%%%%%%%%%%%%%%%%%


\title{Supplementary File: \\
\textcolor{orange}{mvgraphnorm}: An R package which generates  constrained covariance matrix for a given graph to generate samples from a Gaussian graphical model}

\author{
Frank Emmert-Streib, Shailesh Tripathi and Matthias Dehmer  \\
}

\date{}
\maketitle

\begin{abstract}
  This is the supplementary file  containing instructions and various examples to generate constrained covariance matrix using different algorithms.

\end{abstract}


\newpage

\setcounter{tocdepth}{3}
\tableofcontents




\section{Example: Obtaining constrained covariance matrix by using different algorithms}
The following code allows to generate samples from a multivariate normal distribution using a constrained covariance matrix which is generated by using $HTF$, $IPF$ or $KIM$ algorithm. The constrained covariance matrix is generated by using an input network or an adjacency matrix of a network.
\small{
<<plotunif,fig=FALSE>>=
############ Figure A #############
library("mvgraphnorm")
## input network ##
g <- barabasi.game(100, directed=FALSE)
zz1 <- rmvggm(net.str=g, method="htf")
zz2 <- rmvggm(net.str=g, method="ipf")
zz3 <- rmvggm(net.str=g, method="kim")
names(zz1)
head(zz1[[2]][1:10,1:10])
@
}
\section{Example: Obtaining constrained covariance matrix by defining a random correlation matrix using different algorithms}
The following code allows to generate samples from a multivariate normal distribution using a user defined 
correlation matrix. If the matrix is not positive definite matrix we use  Higham (2002) algorithm to convert the matrix into the nearest positive definite matrix. This 
Input matrix is used to obtain a constrained covariance matrix for $HTF$ and $IPF$ algorithms.
\small{
<<plotunif,fig=FALSE>>=
############ Figure A #############
library("mvgraphnorm")
## input network ##
g <- barabasi.game(50, directed=F)

## Generate a random correlation matrix ##
m <- matrix(0,50,50)
m[upper.tri(m)] <- runif(min=-.8, max=.8, 25*49)
m <- m+t(m)
diag(m) <- 1

zz <- rmvggm(20, net.str=g, method="htf"
, cor=m)
head(zz[[2]][1:10,1:10])

@
}
\section{Example: plots of edge and non-edge components of constrained covariance matrix}
The following example provides a 
of distribution of non edge and edge 
components of inverse of constrained 
covariance matrix ($\Sigma(r)$) and the inverse of 
sample covariance matrix($S$).

\small{
<<plotunif,fig=TRUE>>=
############ Figure A #############
library("mvgraphnorm")
## input network ##
g <- barabasi.game(50, directed=F)

## Generate a random correlation matrix ##
m <- matrix(0,50,50)
m[upper.tri(m)] <- runif(min=-.8, max=.8, 25*49)
m <- m+t(m)
diag(m) <- 1
zz <- rmvggm(20, net.str=g, method="htf"
, cor=m)

p <- NULL
p <- viz.rmvggm(zz, net=FALSE)
dev.off()
print(p$covp)
print(p$covsmp)


@
}
\section{Example: Inferring a network structure using conditional independence test}
The following example provides a 
network inferred from samples generated
from multivariate normal distribution
using covariance matrix ($\Sigma(r)$) 
generated by using $HTF$, $IPF$ or $KIM$ 
algorithm. For inferring the network we
use conditional independence test using
Grow-Shrink (GS) method.

\small{
<<plotunif,fig=TRUE>>=
############ Figure A #############
library("mvgraphnorm")
## input network ##
g <- barabasi.game(50, directed=F)

## Generate a random correlation matrix ##
m <- matrix(0,50,50)
m[upper.tri(m)] <- runif(min=-.8, max=.8, 25*49)
m <- m+t(m)
diag(m) <- 1
zz <- rmvggm(20, net.str=g, method="htf", cor=m)

p <- NULL
p <- viz.rmvggm(zz, net=TRUE, test="cor", undirected = TRUE)
print(p$netp)


@
}


\newpage
<<>>=
sessionInfo()
@
\end{document}









